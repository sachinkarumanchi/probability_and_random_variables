# -*- coding: utf-8 -*-
"""Assignment1

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1AauBWC-5udoO6jiT98DBWfyCnOptWvmB
"""

import numpy as np
import random
from scipy.stats import bernoulli
sample_size=1000000
#from the question assigning probabilities
pr_A=0.25
pr_B=0.5
pr_AB=0.125
#from the question probability P(not A and not B)=1-(pr_A+ pr_B- pr_AB)  (from demorgans law)
pr_notAnotB=1-(pr_A + pr_B - pr_AB)
#Assigning samples using bernoulli.rvs
sample_A=bernoulli.rvs(size=sample_size,p=pr_A)
sample_B=bernoulli.rvs(size=sample_size,p=pr_B)
#counting simulated no.of samples.
count_A=0
count_B=0
count_AB=0
for i in range(sample_size):
  if sample_A[i]==1 and sample_B[i]==1:
    count_AB+=1
  if sample_A[i]==1:
    count_A+=1
  if sample_B[i]==1:
    count_B+=1
#calculating simulated probabilities.
sim_pr_AB=count_AB/sample_size
sim_pr_A=count_A/sample_size
sim_pr_B=count_B/sample_size
#counting samples outside A and B
count_notAnotB=0
for i in range(sample_size):
  if sample_A[i]==0 and sample_B[i]==0:
    count_notAnotB+=1
#calculating simulated probability of P(notA and notB)
sim_pr_notAnotB=count_notAnotB/sample_size
#Theory vs Simulation
print("The theoritical and simulated values of probability of A are ",pr_A, "and",sim_pr_A, "respectively.")
print("The theotitical and simulated values of probability of B are ",pr_B, "and",sim_pr_B, "respectively.")
print("The theoritical and simulated values of probability of AB are ",pr_AB, "and",sim_pr_AB, "respectively.")
print("The theoritical and simulated values of probability of not A and not B are ",pr_notAnotB, "and",sim_pr_notAnotB, "respectively.")
#Venn diagram
import matplotlib.pyplot as plt
from matplotlib_venn import venn2
v=venn2((0.125,0.375,0.125),alpha=1)
plt.gca().set_facecolor('skyblue')
plt.gca().set_axis_on()
plt.show()
#P(not A and not B is skyblue colour )

