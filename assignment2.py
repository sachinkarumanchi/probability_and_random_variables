# -*- coding: utf-8 -*-
"""Assignment2

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/10k-yOSq5ZME2Wbjd4HNYGA5BRdu1gJuK
"""

import numpy as np
from scipy.stats import bernoulli
sample_size=1000000
#from the given question,Let probability of getting a six on a fair dice be pr_a
pr_a=1/6
#The probability of not getting a six on a fair dice be pr_b
pr_b=5/6
#simulations using bernoulli r.v
#sample_a is the randomly generated probability of A getting a six on a fair dice first
#sample_b is the randomly generated probability of B grtting a six on a fair dice first
sample_a = bernoulli.rvs(size=sample_size,p=pr_a)
sample_b = bernoulli.rvs(size=sample_size,p=pr_a)
#counting simulated no.of samples
#count_a is the number of randomly generated samples of A getting a six on a fair dice first
#count_b is the number of randomly generated samples of B getting a six on a fair dice first
count_a=0
count_b=0
for i in range(sample_size):
  if sample_a[i]==1:
    count_a+=1
  elif sample_b[i]==1:
    count_b+=1
#calculating the simulated probabilities
#sim_pr_a is the probability of A getting a six on a fair dice first by simulation
#sim_pr_b is the probability of B getting a six on a fair dice first by simulation
sim_pr_a=count_a/(count_a+count_b)
sim_pr_b=count_b/(count_a+count_b)
#calculating Theoritically probability using infinte G.P formulae
#pr_A is the probability of A winnig the game
#pr_B is the probability of B winnig the game 
pr_A=pr_a*(1/(1-pr_b**2))
pr_B=pr_a*pr_b*(1/(1-pr_b**2))
#Theory vs simulation
print("the probability that A wining in theory and simulation are",pr_A, "and",sim_pr_a, "respectively.")
print("the probability that B wining in theory and simulation are",pr_B, "and",sim_pr_b, "respectively.")